// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(cuid())
  email          String? @unique
  name           String?
  fullName       String?
  username       String? @unique
  timezone       String?
  profilePicture String?
  bio            String?
  bufferTime     Int     @default(0) // in minutes
  maxBookings    Int     @default(10) // maximum bookings per day
  advanceNotice  Int     @default(0) // in hours
  integrations   Json    @default("{}")

  googleCalendarConnected Boolean   @default(false)
  calendarConnectedAt     DateTime?
  hashedPassword          String?
  emailVerified           DateTime?

  availability Availability[]
}

model Availability {
  id      String    @id @default(cuid())
  day     DayOfWeek
  enabled Boolean   @default(false)

  userId String
  user   User       @relation(fields: [userId], references: [id])
  slots  TimeSlot[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TimeSlot {
  id             String       @id @default(cuid())
  startTime      String // i will use DateTime here if needed
  endTime        String
  availabilityId String
  availability   Availability @relation(fields: [availabilityId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum DayOfWeek {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}
