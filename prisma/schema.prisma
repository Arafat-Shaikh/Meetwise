// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(cuid())
  email          String?      @unique
  name           String?
  fullName       String?
  username       String?      @unique
  timezone       String?
  profilePicture String?
  bio            String?
  bufferTime     Int          @default(0) // in minutes
  maxBookings    Int          @default(10) // maximum bookings per day
  advanceNotice  Int          @default(0) // in hours
  integrations   Json         @default("{}")
  welcomeMessage String?      @default("Welcome! Let's schedule a time to connect and discuss.")
  meetingType    MeetingType? // e.g., "google_meet", "phone", "in_person"

  googleCalendarConnected Boolean   @default(false)
  calendarConnectedAt     DateTime?
  hashedPassword          String?

  googleAccessToken  String?
  googleRefreshToken String?
  googleTokenExpiry  DateTime? // to check if access token is expired

  emailVerified DateTime?

  bookings     Booking[]
  availability Availability[]
}

model Availability {
  id      String    @id @default(cuid())
  day     DayOfWeek
  enabled Boolean   @default(false)

  userId String
  user   User       @relation(fields: [userId], references: [id])
  slots  TimeSlot[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // need to remove this maybe
  @@unique([day, userId])
}

model TimeSlot {
  id             String       @id @default(cuid())
  startTime      DateTime // i will use DateTime here if needed
  endTime        DateTime
  availabilityId String
  availability   Availability @relation(fields: [availabilityId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum DayOfWeek {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

model Booking {
  id     String @id @default(cuid())
  userId String

  clientEmail       String
  clientName        String
  clientPhoneNumber String?
  clientTimezone    String?
  duration          Int     @default(30)

  date           DateTime
  title          String
  additionalNote String?
  googleEventId  String? // to track the event in Google Calendar

  meetingType     MeetingType? // e.g., "google_meet", "phone", "in_person"
  meetingLink     String? // e.g., actual URL or call instructions
  bookingPageSlug String? // optional: to track which session/page was used

  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MeetingType {
  google_meet
  phone
  in_person
}
